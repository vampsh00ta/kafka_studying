version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    depends_on:
      - web
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka-ui
#    depends_on:
#      - kafka
#    ports:
#      - "8080:8080"
#    restart: always
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=local
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  web:
    build: .
    links:
      - db:db
    command: gunicorn shop.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - django:/usr/src/app/
    ports:
      - "8000:80"
    env_file:
      - ./.env

  migration:
    command: python manage.py loaddata test_data.json && python3 manage.py migrate --noinput
    volumes:
      - .:/usr/src/app/
    depends_on:
      - db
      - web
  db:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgres/data/
    expose:
      - 5432
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=
      - POSTGRES_USER=
      - POSTGRES_HOST=
volumes:
  postgres_data:
  django: